import { binding, before, given, when, then } from 'cucumber-tsflow';
import { Test, TestingModule } from '@nestjs/testing';

import ScenarioScopes from './scenarioScopes';
import { AppModule } from '../../src/app.module';

@binding([ScenarioScopes])
export class AuthSteps {
  constructor(protected context: ScenarioScopes) {}

  @before()
  public async before(): Promise<void> {
    const moduleFixture: TestingModule = await Test.createTestingModule({
      imports: [AppModule],
    }).compile();

    this.context.app = moduleFixture.createNestApplication();
    await this.context.app.init();
  }

  @given(/a user email is withelisted in the app/)
  public async userIsWithelisted() {}

  @when(/the user chooses to sign in using their Google account/)
  public async userSignInGAuth() {}

  @then(/they should also enter a 2FA code generated by the Google Authenticator app/)
  public async userEnter2FA() {}

  @then(/upon entering valid credentials and 2FA code/)
  public async valid2FA() {}

  @then(/the system should return a valid JWT/)
  public async validJWT() {}
}
